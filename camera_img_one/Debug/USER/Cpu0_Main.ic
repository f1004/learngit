/* Translated by:
 *   TASKING VX-toolset for TriCore: C++ compiler v6.3r1 Build 19041558 SN 99547867
 */
void *memcpy(); void *memset();
#line 1 "..\\USER\\Cpu0_Main.cpp"
#line 131 "C:\\Users\\1004\\learngit\\camera_img_one\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\Ifx_Types.h"
enum Ifx_RxSel {
Ifx_RxSel_a,
Ifx_RxSel_b,
Ifx_RxSel_c,
Ifx_RxSel_d,
Ifx_RxSel_e,
Ifx_RxSel_f,
Ifx_RxSel_g,
Ifx_RxSel_h};
#line 374 "C:\\Users\\1004\\learngit\\camera_img_one\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg\\IfxCpu_regdef.h"
struct _Ifx_CPU_ICR_Bits;
#line 992
union Ifx_CPU_ICR;
#line 137 "C:\\Users\\1004\\learngit\\camera_img_one\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl/IfxCpu_cfg.h"
enum IfxCpu_Index {
IfxCpu_Index_0,
IfxCpu_Index_1,
IfxCpu_Index_none};
#line 157
enum IfxCpu_ResourceCpu {
IfxCpu_ResourceCpu_0,
IfxCpu_ResourceCpu_1,
IfxCpu_ResourceCpu_none};
#line 84 "C:\\Users\\1004\\learngit\\camera_img_one\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port/Std/IfxPort.h"
enum IfxPort_InputMode {
IfxPort_InputMode_undefined = (-1),
IfxPort_InputMode_noPullDevice,
IfxPort_InputMode_pullDown = 8,
IfxPort_InputMode_pullUp = 16};
#line 96
enum IfxPort_Mode {
IfxPort_Mode_inputNoPullDevice,
IfxPort_Mode_inputPullDown = 8U,
IfxPort_Mode_inputPullUp = 0x10U,
IfxPort_Mode_outputPushPullGeneral = 0x80U,
IfxPort_Mode_outputPushPullAlt1 = 0x88U,
IfxPort_Mode_outputPushPullAlt2 = 0x90U,
IfxPort_Mode_outputPushPullAlt3 = 0x98U,
IfxPort_Mode_outputPushPullAlt4 = 0xa0U,
IfxPort_Mode_outputPushPullAlt5 = 0xa8U,
IfxPort_Mode_outputPushPullAlt6 = 0xb0U,
IfxPort_Mode_outputPushPullAlt7 = 0xb8U,
IfxPort_Mode_outputOpenDrainGeneral = 0xc0U,
IfxPort_Mode_outputOpenDrainAlt1 = 0xc8U,
IfxPort_Mode_outputOpenDrainAlt2 = 0xd0U,
IfxPort_Mode_outputOpenDrainAlt3 = 0xd8U,
IfxPort_Mode_outputOpenDrainAlt4 = 0xe0U,
IfxPort_Mode_outputOpenDrainAlt5 = 0xe8U,
IfxPort_Mode_outputOpenDrainAlt6 = 0xf0U,
IfxPort_Mode_outputOpenDrainAlt7 = 0xf8U};
#line 121
enum IfxPort_OutputIdx {
IfxPort_OutputIdx_general = 128U,
IfxPort_OutputIdx_alt1 = 136U,
IfxPort_OutputIdx_alt2 = 144U,
IfxPort_OutputIdx_alt3 = 152U,
IfxPort_OutputIdx_alt4 = 160U,
IfxPort_OutputIdx_alt5 = 168U,
IfxPort_OutputIdx_alt6 = 176U,
IfxPort_OutputIdx_alt7 = 184U};
#line 135
enum IfxPort_OutputMode {
IfxPort_OutputMode_pushPull = 128U,
IfxPort_OutputMode_openDrain = 192U};
#line 145
enum IfxPort_PadDriver {
IfxPort_PadDriver_cmosAutomotiveSpeed1,
IfxPort_PadDriver_cmosAutomotiveSpeed2,
IfxPort_PadDriver_cmosAutomotiveSpeed3,
IfxPort_PadDriver_cmosAutomotiveSpeed4,
IfxPort_PadDriver_lvdsSpeed1,
IfxPort_PadDriver_lvdsSpeed2,
IfxPort_PadDriver_lvdsSpeed3,
IfxPort_PadDriver_lvdsSpeed4,
IfxPort_PadDriver_ttlSpeed1,
IfxPort_PadDriver_ttlSpeed2,
IfxPort_PadDriver_ttlSpeed3,
IfxPort_PadDriver_ttlSpeed4};
#line 173
enum IfxPort_State {
IfxPort_State_notChanged,
IfxPort_State_high,
IfxPort_State_low = 0x10000,
IfxPort_State_toggled};
#line 82 "C:\\Users\\1004\\learngit\\camera_img_one\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6/Std/IfxCcu6.h"
enum IfxCcu6_CaptureCompareInput {
IfxCcu6_CaptureCompareInput_cC60,
IfxCcu6_CaptureCompareInput_cC61 = 2,
IfxCcu6_CaptureCompareInput_cC62 = 4,
IfxCcu6_CaptureCompareInput_cTRAP = 6,
IfxCcu6_CaptureCompareInput_cCPOS0 = 8,
IfxCcu6_CaptureCompareInput_cCPOS1 = 10,
IfxCcu6_CaptureCompareInput_cCPOS2 = 12};
#line 95
enum IfxCcu6_CaptureCompareInputSignal {
IfxCcu6_CaptureCompareInputSignal_a,
IfxCcu6_CaptureCompareInputSignal_b,
IfxCcu6_CaptureCompareInputSignal_c,
IfxCcu6_CaptureCompareInputSignal_d};
#line 83 "C:\\Users\\1004\\learngit\\camera_img_one\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std\\IfxScuEru.h"
enum IfxScuEru_ExternalInputSelection {
IfxScuEru_ExternalInputSelection_0,
IfxScuEru_ExternalInputSelection_1,
IfxScuEru_ExternalInputSelection_2,
IfxScuEru_ExternalInputSelection_3};
#line 93
enum IfxScuEru_InputChannel {
IfxScuEru_InputChannel_0,
IfxScuEru_InputChannel_1,
IfxScuEru_InputChannel_2,
IfxScuEru_InputChannel_3,
IfxScuEru_InputChannel_4,
IfxScuEru_InputChannel_5,
IfxScuEru_InputChannel_6,
IfxScuEru_InputChannel_7};
#line 223 "C:\\Users\\1004\\learngit\\camera_img_one\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl/IfxGtm_cfg.h"
enum IfxGtm_Atom_Ch {
IfxGtm_Atom_Ch_none = (-1),
IfxGtm_Atom_Ch_0,
IfxGtm_Atom_Ch_1,
IfxGtm_Atom_Ch_2,
IfxGtm_Atom_Ch_3,
IfxGtm_Atom_Ch_4,
IfxGtm_Atom_Ch_5,
IfxGtm_Atom_Ch_6,
IfxGtm_Atom_Ch_7};
#line 124 "C:\\Users\\1004\\learngit\\camera_img_one\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin/Std/IfxAsclin.h"
enum IfxAsclin_CtsInputSelect {
IfxAsclin_CtsInputSelect_0,
IfxAsclin_CtsInputSelect_1,
IfxAsclin_CtsInputSelect_2,
IfxAsclin_CtsInputSelect_3};
#line 310
enum IfxAsclin_RxInputSelect {
IfxAsclin_RxInputSelect_0,
IfxAsclin_RxInputSelect_1,
IfxAsclin_RxInputSelect_2,
IfxAsclin_RxInputSelect_3,
IfxAsclin_RxInputSelect_4,
IfxAsclin_RxInputSelect_5,
IfxAsclin_RxInputSelect_6,
IfxAsclin_RxInputSelect_7};
#line 45 "C:\\Users\\1004\\learngit\\camera_img_one\\Libraries\\seekfree_libraries\\zf_uart.h"
enum UARTN_enum {
UART_0,
UART_1,
UART_2,
UART_3};
#line 55
enum UART_PIN_enum {

UART0_TX_P14_0, UART0_TX_P14_1, UART0_TX_P15_2, UART0_TX_P15_3,

UART0_RX_P14_1, UART0_RX_P15_3,



UART1_TX_P02_2, UART1_TX_P11_12, UART1_TX_P14_10, UART1_TX_P15_0, UART1_TX_P15_1, UART1_TX_P15_4, UART1_TX_P15_5, UART1_TX_P20_10, UART1_TX_P33_12, UART1_TX_P33_13,

UART1_RX_P02_3, UART1_RX_P11_10, UART1_RX_P14_8, UART1_RX_P15_1, UART1_RX_P15_5, UART1_RX_P20_9, UART1_RX_P33_13,


UART2_TX_P02_0, UART2_TX_P10_5, UART2_TX_P14_2, UART2_TX_P14_3, UART2_TX_P33_8, UART2_TX_P33_9,

UART2_RX_P02_0, UART2_RX_P02_1, UART2_RX_P10_6, UART2_RX_P14_3, UART2_RX_P33_8,



UART3_TX_P00_0, UART3_TX_P00_1, UART3_TX_P15_6, UART3_TX_P15_7, UART3_TX_P20_0, UART3_TX_P20_3, UART3_TX_P21_7, UART3_TX_P32_2, UART3_TX_P32_3,

UART3_RX_P00_1, UART3_RX_P15_7, UART3_RX_P20_3, UART3_RX_P21_6, UART3_RX_P32_2};
#line 129 "C:\\Program Files\\TASKING\\TriCore v6.3r1\\ctc\\include.cxx\\limits"
enum _ZSt17float_round_style {

_ZSt19round_indeterminate = (-1),
_ZSt17round_toward_zero,
_ZSt16round_to_nearest,
_ZSt21round_toward_infinity,
_ZSt25round_toward_neg_infinity};


enum _ZSt18float_denorm_style {

_ZSt20denorm_indeterminate = (-1),
_ZSt13denorm_absent,
_ZSt14denorm_present};
#line 101 "C:\\Users\\1004\\learngit\\camera_img_one\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\PLATFORM_TYPES.H"
typedef unsigned char boolean;



typedef unsigned char uint8;



typedef unsigned short uint16;



typedef unsigned long uint32;
#line 33 "C:\\Users\\1004\\learngit\\camera_img_one\\Libraries\\seekfree_libraries\\common\\common.h"
typedef char int8;
#line 374 "C:\\Users\\1004\\learngit\\camera_img_one\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg\\IfxCpu_regdef.h"
struct _Ifx_CPU_ICR_Bits {

__sfrbit32 unsigned int CCPN: 10;
__sfrbit32 unsigned int reserved_10: 5;
__sfrbit32 unsigned int IE: 1;
__sfrbit32 unsigned int PIPN: 10;
__sfrbit32 unsigned int reserved_26: 6;};
typedef struct _Ifx_CPU_ICR_Bits Ifx_CPU_ICR_Bits;
#line 992
union Ifx_CPU_ICR {
unsigned U;
signed int I;
Ifx_CPU_ICR_Bits B;};
typedef union Ifx_CPU_ICR Ifx_CPU_ICR;
#line 50 "C:\\Users\\1004\\learngit\\camera_img_one\\Libraries\\seekfree_libraries\\zf_uart.h"
typedef enum UARTN_enum UARTN_enum;
#line 77
typedef enum UART_PIN_enum UART_PIN_enum;
#line 117 "C:\\Users\\1004\\learngit\\camera_img_one\\Libraries\\seekfree_libraries\\common\\common.h"
extern void _Z7get_clkv(void);
#line 141 "C:\\Program Files\\TASKING\\TriCore v6.3r1\\ctc\\include\\stdio.h"
extern int printf(const char *restrict, ...);
#line 87 "C:\\Users\\1004\\learngit\\camera_img_one\\Libraries\\seekfree_libraries\\zf_uart.h"
extern void _Z9uart_init10UARTN_enumm13UART_PIN_enumS0_(UARTN_enum uartn, uint32 baud, UART_PIN_enum tx_pin, UART_PIN_enum rx_pin);


extern void _Z11uart_putstr10UARTN_enumPKc(UARTN_enum uartn, const int8 *str);
#line 109 "C:\\Users\\1004\\learngit\\camera_img_one\\Libraries\\seekfree_peripheral\\SEEKFREE_18TFT.h"
extern void _Z8lcd_initv(void);
#line 108 "C:\\Users\\1004\\learngit\\camera_img_one\\Libraries\\seekfree_peripheral\\SEEKFREE_MT9V03X.h"
extern void _Z12mt9v03x_initv(void);
#line 18 "..\\USER\\Cpu0_Main.cpp"
extern int _Z10core0_mainv(void);
#line 2
unsigned char Threshold2;
#line 11
uint8 uart_buff;
uint16 num;
extern int photo_Flag;
extern int pht;
#line 13
int photo_Flag = 0;
int pht = 1;
#pragma section all "cpu0_dsram"
#pragma section all "cpu0_dsram"

int _Z10core0_mainv(void)
{ auto Ifx_CPU_ICR __T1; auto boolean __T2;
{ (((__T2 = (((__T1.U) = ((unsigned)(__mfcr(0xfe2c)))) , ((boolean)(((int)((__T1.B).IE)) != 0)))) , (__disable())) , (__nop())) , __T2; }
_Z7get_clkv();

_Z8lcd_initv();
_Z9uart_init10UARTN_enumm13UART_PIN_enumS0_(UART_0, 115200UL, UART0_TX_P14_0, UART0_RX_P14_1);
_Z11uart_putstr10UARTN_enumPKc(UART_0, ((const char *)"\n---uart test---\n"));

printf(((const char *)"printf demo"));

{ __enable(); }
_Z12mt9v03x_initv();

while (1)
{

}
}
#pragma section all restore
#pragma section all restore
